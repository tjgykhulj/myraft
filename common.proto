syntax = "proto3";
package org.github.tjg.myraft.model.proto;

option java_multiple_files = true;

message LogMetaData {
    uint64 current_term = 1;
    uint32 vote_for = 2;
    uint64 first_log_index = 3;
    uint64 commit_index = 4;
}

message VoteRequest {
    uint32 server_id = 1; // 请求选票的候选人的 Id
    uint64 term = 2; // 候选人的任期号
    uint64 last_log_term = 3; // 候选人的最后日志条目的任期号
    uint64 last_log_index = 4; // 候选人最后日志条目的索引值
};

message VoteResponse {
    bool granted = 1; // 赢得了此张选票时为真
    uint64 term = 2; // 对端当前任期号
}

message SnapshotMetaData {
    uint64 last_included_index = 1;
    uint64 last_included_term = 2;
    repeated Server server = 3;
}

message Server {
    uint32 serverId = 1;
    int32 port = 2;
    string ip = 3;
}


enum EntryType {
    ENTRY_TYPE_DATA = 0;
    ENTRY_TYPE_CONFIGURATION= 1;
};

message LogEntry {
    uint64 term = 1;
    uint64 index = 2;
    EntryType type = 3;
    bytes data = 4;
};

enum ResCode {
    RES_CODE_SUCCESS = 0;
    RES_CODE_FAIL = 1;
    RES_CODE_NOT_LEADER = 2;
}

message AppendEntriesRequest {
    uint32 server_id = 1; // 领导人的Id
    uint64 term = 2; // 领导人的任期号
    uint64 prev_log_index = 3; // 新的日志条目紧随之前的索引值
    uint64 prev_log_term = 4; // prev_log_index条目的任期号
    uint64 commit_index = 5; // 领导人已经提交的日志的索引值
    LogEntry entries = 6; // 准备存储的日志条目（表示心跳时为空）
};

message AppendEntriesResponse {
    ResCode res_code = 1; // 跟随者包含了匹配上 prevLogIndex 和 prevLogTerm 的日志时为真
    uint64 term = 2; // 当前的任期号，用于领导人去更新自己
    uint64 last_log_index = 3;
};