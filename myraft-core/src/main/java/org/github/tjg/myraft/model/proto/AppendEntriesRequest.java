// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package org.github.tjg.myraft.model.proto;

/**
 * Protobuf type {@code org.github.tjg.myraft.model.proto.AppendEntriesRequest}
 */
public  final class AppendEntriesRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:org.github.tjg.myraft.model.proto.AppendEntriesRequest)
    AppendEntriesRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AppendEntriesRequest.newBuilder() to construct.
  private AppendEntriesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AppendEntriesRequest() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AppendEntriesRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AppendEntriesRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            serverId_ = input.readUInt32();
            break;
          }
          case 16: {

            term_ = input.readUInt64();
            break;
          }
          case 24: {

            prevLogIndex_ = input.readUInt64();
            break;
          }
          case 32: {

            prevLogTerm_ = input.readUInt64();
            break;
          }
          case 40: {

            commitIndex_ = input.readUInt64();
            break;
          }
          case 50: {
            org.github.tjg.myraft.model.proto.LogEntry.Builder subBuilder = null;
            if (entries_ != null) {
              subBuilder = entries_.toBuilder();
            }
            entries_ = input.readMessage(org.github.tjg.myraft.model.proto.LogEntry.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(entries_);
              entries_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.github.tjg.myraft.model.proto.Common.internal_static_org_github_tjg_myraft_model_proto_AppendEntriesRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.github.tjg.myraft.model.proto.Common.internal_static_org_github_tjg_myraft_model_proto_AppendEntriesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.github.tjg.myraft.model.proto.AppendEntriesRequest.class, org.github.tjg.myraft.model.proto.AppendEntriesRequest.Builder.class);
  }

  public static final int SERVER_ID_FIELD_NUMBER = 1;
  private int serverId_;
  /**
   * <pre>
   * 领导人的Id
   * </pre>
   *
   * <code>uint32 server_id = 1;</code>
   * @return The serverId.
   */
  public int getServerId() {
    return serverId_;
  }

  public static final int TERM_FIELD_NUMBER = 2;
  private long term_;
  /**
   * <pre>
   * 领导人的任期号
   * </pre>
   *
   * <code>uint64 term = 2;</code>
   * @return The term.
   */
  public long getTerm() {
    return term_;
  }

  public static final int PREV_LOG_INDEX_FIELD_NUMBER = 3;
  private long prevLogIndex_;
  /**
   * <pre>
   * 新的日志条目紧随之前的索引值
   * </pre>
   *
   * <code>uint64 prev_log_index = 3;</code>
   * @return The prevLogIndex.
   */
  public long getPrevLogIndex() {
    return prevLogIndex_;
  }

  public static final int PREV_LOG_TERM_FIELD_NUMBER = 4;
  private long prevLogTerm_;
  /**
   * <pre>
   * prev_log_index条目的任期号
   * </pre>
   *
   * <code>uint64 prev_log_term = 4;</code>
   * @return The prevLogTerm.
   */
  public long getPrevLogTerm() {
    return prevLogTerm_;
  }

  public static final int COMMIT_INDEX_FIELD_NUMBER = 5;
  private long commitIndex_;
  /**
   * <pre>
   * 领导人已经提交的日志的索引值
   * </pre>
   *
   * <code>uint64 commit_index = 5;</code>
   * @return The commitIndex.
   */
  public long getCommitIndex() {
    return commitIndex_;
  }

  public static final int ENTRIES_FIELD_NUMBER = 6;
  private org.github.tjg.myraft.model.proto.LogEntry entries_;
  /**
   * <pre>
   * 准备存储的日志条目（表示心跳时为空）
   * </pre>
   *
   * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
   * @return Whether the entries field is set.
   */
  public boolean hasEntries() {
    return entries_ != null;
  }
  /**
   * <pre>
   * 准备存储的日志条目（表示心跳时为空）
   * </pre>
   *
   * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
   * @return The entries.
   */
  public org.github.tjg.myraft.model.proto.LogEntry getEntries() {
    return entries_ == null ? org.github.tjg.myraft.model.proto.LogEntry.getDefaultInstance() : entries_;
  }
  /**
   * <pre>
   * 准备存储的日志条目（表示心跳时为空）
   * </pre>
   *
   * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
   */
  public org.github.tjg.myraft.model.proto.LogEntryOrBuilder getEntriesOrBuilder() {
    return getEntries();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (serverId_ != 0) {
      output.writeUInt32(1, serverId_);
    }
    if (term_ != 0L) {
      output.writeUInt64(2, term_);
    }
    if (prevLogIndex_ != 0L) {
      output.writeUInt64(3, prevLogIndex_);
    }
    if (prevLogTerm_ != 0L) {
      output.writeUInt64(4, prevLogTerm_);
    }
    if (commitIndex_ != 0L) {
      output.writeUInt64(5, commitIndex_);
    }
    if (entries_ != null) {
      output.writeMessage(6, getEntries());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (serverId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, serverId_);
    }
    if (term_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, term_);
    }
    if (prevLogIndex_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, prevLogIndex_);
    }
    if (prevLogTerm_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, prevLogTerm_);
    }
    if (commitIndex_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, commitIndex_);
    }
    if (entries_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getEntries());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.github.tjg.myraft.model.proto.AppendEntriesRequest)) {
      return super.equals(obj);
    }
    org.github.tjg.myraft.model.proto.AppendEntriesRequest other = (org.github.tjg.myraft.model.proto.AppendEntriesRequest) obj;

    if (getServerId()
        != other.getServerId()) return false;
    if (getTerm()
        != other.getTerm()) return false;
    if (getPrevLogIndex()
        != other.getPrevLogIndex()) return false;
    if (getPrevLogTerm()
        != other.getPrevLogTerm()) return false;
    if (getCommitIndex()
        != other.getCommitIndex()) return false;
    if (hasEntries() != other.hasEntries()) return false;
    if (hasEntries()) {
      if (!getEntries()
          .equals(other.getEntries())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SERVER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getServerId();
    hash = (37 * hash) + TERM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTerm());
    hash = (37 * hash) + PREV_LOG_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPrevLogIndex());
    hash = (37 * hash) + PREV_LOG_TERM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPrevLogTerm());
    hash = (37 * hash) + COMMIT_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCommitIndex());
    if (hasEntries()) {
      hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getEntries().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.github.tjg.myraft.model.proto.AppendEntriesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.github.tjg.myraft.model.proto.AppendEntriesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.github.tjg.myraft.model.proto.AppendEntriesRequest)
      org.github.tjg.myraft.model.proto.AppendEntriesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.github.tjg.myraft.model.proto.Common.internal_static_org_github_tjg_myraft_model_proto_AppendEntriesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.github.tjg.myraft.model.proto.Common.internal_static_org_github_tjg_myraft_model_proto_AppendEntriesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.github.tjg.myraft.model.proto.AppendEntriesRequest.class, org.github.tjg.myraft.model.proto.AppendEntriesRequest.Builder.class);
    }

    // Construct using org.github.tjg.myraft.model.proto.AppendEntriesRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      serverId_ = 0;

      term_ = 0L;

      prevLogIndex_ = 0L;

      prevLogTerm_ = 0L;

      commitIndex_ = 0L;

      if (entriesBuilder_ == null) {
        entries_ = null;
      } else {
        entries_ = null;
        entriesBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.github.tjg.myraft.model.proto.Common.internal_static_org_github_tjg_myraft_model_proto_AppendEntriesRequest_descriptor;
    }

    @java.lang.Override
    public org.github.tjg.myraft.model.proto.AppendEntriesRequest getDefaultInstanceForType() {
      return org.github.tjg.myraft.model.proto.AppendEntriesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public org.github.tjg.myraft.model.proto.AppendEntriesRequest build() {
      org.github.tjg.myraft.model.proto.AppendEntriesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.github.tjg.myraft.model.proto.AppendEntriesRequest buildPartial() {
      org.github.tjg.myraft.model.proto.AppendEntriesRequest result = new org.github.tjg.myraft.model.proto.AppendEntriesRequest(this);
      result.serverId_ = serverId_;
      result.term_ = term_;
      result.prevLogIndex_ = prevLogIndex_;
      result.prevLogTerm_ = prevLogTerm_;
      result.commitIndex_ = commitIndex_;
      if (entriesBuilder_ == null) {
        result.entries_ = entries_;
      } else {
        result.entries_ = entriesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.github.tjg.myraft.model.proto.AppendEntriesRequest) {
        return mergeFrom((org.github.tjg.myraft.model.proto.AppendEntriesRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.github.tjg.myraft.model.proto.AppendEntriesRequest other) {
      if (other == org.github.tjg.myraft.model.proto.AppendEntriesRequest.getDefaultInstance()) return this;
      if (other.getServerId() != 0) {
        setServerId(other.getServerId());
      }
      if (other.getTerm() != 0L) {
        setTerm(other.getTerm());
      }
      if (other.getPrevLogIndex() != 0L) {
        setPrevLogIndex(other.getPrevLogIndex());
      }
      if (other.getPrevLogTerm() != 0L) {
        setPrevLogTerm(other.getPrevLogTerm());
      }
      if (other.getCommitIndex() != 0L) {
        setCommitIndex(other.getCommitIndex());
      }
      if (other.hasEntries()) {
        mergeEntries(other.getEntries());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.github.tjg.myraft.model.proto.AppendEntriesRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.github.tjg.myraft.model.proto.AppendEntriesRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int serverId_ ;
    /**
     * <pre>
     * 领导人的Id
     * </pre>
     *
     * <code>uint32 server_id = 1;</code>
     * @return The serverId.
     */
    public int getServerId() {
      return serverId_;
    }
    /**
     * <pre>
     * 领导人的Id
     * </pre>
     *
     * <code>uint32 server_id = 1;</code>
     * @param value The serverId to set.
     * @return This builder for chaining.
     */
    public Builder setServerId(int value) {
      
      serverId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 领导人的Id
     * </pre>
     *
     * <code>uint32 server_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerId() {
      
      serverId_ = 0;
      onChanged();
      return this;
    }

    private long term_ ;
    /**
     * <pre>
     * 领导人的任期号
     * </pre>
     *
     * <code>uint64 term = 2;</code>
     * @return The term.
     */
    public long getTerm() {
      return term_;
    }
    /**
     * <pre>
     * 领导人的任期号
     * </pre>
     *
     * <code>uint64 term = 2;</code>
     * @param value The term to set.
     * @return This builder for chaining.
     */
    public Builder setTerm(long value) {
      
      term_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 领导人的任期号
     * </pre>
     *
     * <code>uint64 term = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTerm() {
      
      term_ = 0L;
      onChanged();
      return this;
    }

    private long prevLogIndex_ ;
    /**
     * <pre>
     * 新的日志条目紧随之前的索引值
     * </pre>
     *
     * <code>uint64 prev_log_index = 3;</code>
     * @return The prevLogIndex.
     */
    public long getPrevLogIndex() {
      return prevLogIndex_;
    }
    /**
     * <pre>
     * 新的日志条目紧随之前的索引值
     * </pre>
     *
     * <code>uint64 prev_log_index = 3;</code>
     * @param value The prevLogIndex to set.
     * @return This builder for chaining.
     */
    public Builder setPrevLogIndex(long value) {
      
      prevLogIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 新的日志条目紧随之前的索引值
     * </pre>
     *
     * <code>uint64 prev_log_index = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrevLogIndex() {
      
      prevLogIndex_ = 0L;
      onChanged();
      return this;
    }

    private long prevLogTerm_ ;
    /**
     * <pre>
     * prev_log_index条目的任期号
     * </pre>
     *
     * <code>uint64 prev_log_term = 4;</code>
     * @return The prevLogTerm.
     */
    public long getPrevLogTerm() {
      return prevLogTerm_;
    }
    /**
     * <pre>
     * prev_log_index条目的任期号
     * </pre>
     *
     * <code>uint64 prev_log_term = 4;</code>
     * @param value The prevLogTerm to set.
     * @return This builder for chaining.
     */
    public Builder setPrevLogTerm(long value) {
      
      prevLogTerm_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * prev_log_index条目的任期号
     * </pre>
     *
     * <code>uint64 prev_log_term = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrevLogTerm() {
      
      prevLogTerm_ = 0L;
      onChanged();
      return this;
    }

    private long commitIndex_ ;
    /**
     * <pre>
     * 领导人已经提交的日志的索引值
     * </pre>
     *
     * <code>uint64 commit_index = 5;</code>
     * @return The commitIndex.
     */
    public long getCommitIndex() {
      return commitIndex_;
    }
    /**
     * <pre>
     * 领导人已经提交的日志的索引值
     * </pre>
     *
     * <code>uint64 commit_index = 5;</code>
     * @param value The commitIndex to set.
     * @return This builder for chaining.
     */
    public Builder setCommitIndex(long value) {
      
      commitIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 领导人已经提交的日志的索引值
     * </pre>
     *
     * <code>uint64 commit_index = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCommitIndex() {
      
      commitIndex_ = 0L;
      onChanged();
      return this;
    }

    private org.github.tjg.myraft.model.proto.LogEntry entries_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.github.tjg.myraft.model.proto.LogEntry, org.github.tjg.myraft.model.proto.LogEntry.Builder, org.github.tjg.myraft.model.proto.LogEntryOrBuilder> entriesBuilder_;
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     * @return Whether the entries field is set.
     */
    public boolean hasEntries() {
      return entriesBuilder_ != null || entries_ != null;
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     * @return The entries.
     */
    public org.github.tjg.myraft.model.proto.LogEntry getEntries() {
      if (entriesBuilder_ == null) {
        return entries_ == null ? org.github.tjg.myraft.model.proto.LogEntry.getDefaultInstance() : entries_;
      } else {
        return entriesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     */
    public Builder setEntries(org.github.tjg.myraft.model.proto.LogEntry value) {
      if (entriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        entries_ = value;
        onChanged();
      } else {
        entriesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     */
    public Builder setEntries(
        org.github.tjg.myraft.model.proto.LogEntry.Builder builderForValue) {
      if (entriesBuilder_ == null) {
        entries_ = builderForValue.build();
        onChanged();
      } else {
        entriesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     */
    public Builder mergeEntries(org.github.tjg.myraft.model.proto.LogEntry value) {
      if (entriesBuilder_ == null) {
        if (entries_ != null) {
          entries_ =
            org.github.tjg.myraft.model.proto.LogEntry.newBuilder(entries_).mergeFrom(value).buildPartial();
        } else {
          entries_ = value;
        }
        onChanged();
      } else {
        entriesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     */
    public Builder clearEntries() {
      if (entriesBuilder_ == null) {
        entries_ = null;
        onChanged();
      } else {
        entries_ = null;
        entriesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     */
    public org.github.tjg.myraft.model.proto.LogEntry.Builder getEntriesBuilder() {
      
      onChanged();
      return getEntriesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     */
    public org.github.tjg.myraft.model.proto.LogEntryOrBuilder getEntriesOrBuilder() {
      if (entriesBuilder_ != null) {
        return entriesBuilder_.getMessageOrBuilder();
      } else {
        return entries_ == null ?
            org.github.tjg.myraft.model.proto.LogEntry.getDefaultInstance() : entries_;
      }
    }
    /**
     * <pre>
     * 准备存储的日志条目（表示心跳时为空）
     * </pre>
     *
     * <code>.org.github.tjg.myraft.model.proto.LogEntry entries = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.github.tjg.myraft.model.proto.LogEntry, org.github.tjg.myraft.model.proto.LogEntry.Builder, org.github.tjg.myraft.model.proto.LogEntryOrBuilder> 
        getEntriesFieldBuilder() {
      if (entriesBuilder_ == null) {
        entriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.github.tjg.myraft.model.proto.LogEntry, org.github.tjg.myraft.model.proto.LogEntry.Builder, org.github.tjg.myraft.model.proto.LogEntryOrBuilder>(
                getEntries(),
                getParentForChildren(),
                isClean());
        entries_ = null;
      }
      return entriesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:org.github.tjg.myraft.model.proto.AppendEntriesRequest)
  }

  // @@protoc_insertion_point(class_scope:org.github.tjg.myraft.model.proto.AppendEntriesRequest)
  private static final org.github.tjg.myraft.model.proto.AppendEntriesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.github.tjg.myraft.model.proto.AppendEntriesRequest();
  }

  public static org.github.tjg.myraft.model.proto.AppendEntriesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AppendEntriesRequest>
      PARSER = new com.google.protobuf.AbstractParser<AppendEntriesRequest>() {
    @java.lang.Override
    public AppendEntriesRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AppendEntriesRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AppendEntriesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AppendEntriesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.github.tjg.myraft.model.proto.AppendEntriesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

